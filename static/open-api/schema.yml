openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/api-token-auth/:
    post:
      operationId: api_api_token_auth_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/authors/:
    get:
      operationId: api_authors_list
      description: ''
      tags:
      - Author
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
          description: ''
    post:
      operationId: api_authors_create
      description: ''
      tags:
      - Author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
  /api/authors/{id}/:
    get:
      operationId: api_authors_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - Author
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    put:
      operationId: api_authors_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - Author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    patch:
      operationId: api_authors_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - Author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    delete:
      operationId: api_authors_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - Author
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/books/:
    get:
      operationId: api_books_list
      description: ''
      tags:
      - Book
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
          description: ''
    post:
      operationId: api_books_create
      description: ''
      tags:
      - Book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /api/books/{id}/:
    get:
      operationId: api_books_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - Book
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    put:
      operationId: api_books_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - Book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    patch:
      operationId: api_books_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - Book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBook'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    delete:
      operationId: api_books_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this book.
        required: true
      tags:
      - Book
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/customers/:
    get:
      operationId: api_customers_list
      description: ''
      tags:
      - Customer
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
    post:
      operationId: api_customers_create
      description: ''
      tags:
      - Customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /api/customers/{id}/:
    get:
      operationId: api_customers_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - Customer
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: api_customers_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - Customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: api_customers_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - Customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: api_customers_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - Customer
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/places/:
    get:
      operationId: api_places_list
      description: ''
      tags:
      - Place
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place'
          description: ''
    post:
      operationId: api_places_create
      description: ''
      tags:
      - Place
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Place'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Place'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
          description: ''
  /api/places/{id}/:
    get:
      operationId: api_places_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this place.
        required: true
      tags:
      - Place
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
          description: ''
    put:
      operationId: api_places_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this place.
        required: true
      tags:
      - Place
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Place'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Place'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
          description: ''
    patch:
      operationId: api_places_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this place.
        required: true
      tags:
      - Place
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPlace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPlace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPlace'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
          description: ''
    delete:
      operationId: api_places_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this place.
        required: true
      tags:
      - Place
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/rents/:
    get:
      operationId: api_rents_list
      description: ''
      tags:
      - Rent
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rent'
          description: ''
    post:
      operationId: api_rents_create
      description: ''
      tags:
      - Rent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rent'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rent'
          description: ''
  /api/rents/{id}/:
    get:
      operationId: api_rents_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rent.
        required: true
      tags:
      - Rent
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rent'
          description: ''
    put:
      operationId: api_rents_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rent.
        required: true
      tags:
      - Rent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rent'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rent'
          description: ''
    patch:
      operationId: api_rents_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rent.
        required: true
      tags:
      - Rent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRent'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rent'
          description: ''
    delete:
      operationId: api_rents_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rent.
        required: true
      tags:
      - Rent
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/users/:
    get:
      operationId: api_users_list
      description: ''
      tags:
      - User
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_users_create
      description: ''
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - User
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - User
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Author:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        book_list:
          type: array
          items:
            $ref: '#/components/schemas/Book'
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - book_list
      - created_at
      - first_name
      - id
      - image
      - last_name
      - updated_at
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        isbn:
          type: string
          maxLength: 150
        title:
          type: string
          maxLength: 150
        pages:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_borrowed:
          type: boolean
        author_pks:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
      required:
      - author_pks
      - id
      - isbn
      - pages
      - title
    Customer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        rent_list:
          type: array
          items:
            $ref: '#/components/schemas/Rent'
          readOnly: true
        place_pk:
          type: integer
          writeOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        street:
          type: string
          maxLength: 150
        phone:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        place:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - created_at
      - email
      - first_name
      - id
      - last_name
      - phone
      - place
      - place_pk
      - rent_list
      - street
      - updated_at
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        image:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAuthor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        book_list:
          type: array
          items:
            $ref: '#/components/schemas/Book'
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedBook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author_pks:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        isbn:
          type: string
          maxLength: 150
        title:
          type: string
          maxLength: 150
        pages:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_borrowed:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        authors:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
    PatchedCustomer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        rent_list:
          type: array
          items:
            $ref: '#/components/schemas/Rent'
          readOnly: true
        place_pk:
          type: integer
          writeOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        street:
          type: string
          maxLength: 150
        phone:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        place:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
    PatchedPlace:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        postcode:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        place:
          type: string
          maxLength: 150
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedRent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customer_pk:
          type: integer
          writeOnly: true
        book_pk:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        is_picked_up:
          type: boolean
        is_returned:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        customers:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        books:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    Place:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        postcode:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        place:
          type: string
          maxLength: 150
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - place
      - postcode
      - updated_at
    Rent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customer_pk:
          type: integer
          writeOnly: true
        book_pk:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        is_picked_up:
          type: boolean
        is_returned:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        customers:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        books:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - begin
      - book_pk
      - books
      - created_at
      - customer_pk
      - customers
      - end
      - id
      - updated_at
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - first_name
      - id
      - last_name
      - password
      - username
  securitySchemes:
    tokenAuth:
      type: http
      scheme: bearer
      bearerFormat: Bearer
